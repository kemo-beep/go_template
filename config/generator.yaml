generator:
  enabled: true
  auto_scan: true
  output_dir: "./generated"
  package_name: "generated"

  # Global configuration
  global:
    security:
      audit_log: true
      soft_delete: true
      timestamps: true
      csrf: false
      rate_limit:
        requests: 100
        window: "1m"
        burst: 10
      rbac:
        resource: "auto_generated"
        permissions:
          list: ["read"]
          create: ["write"]
          get: ["read"]
          update: ["write"]
          delete: ["delete"]
          bulk: ["write"]
          search: ["read"]
          stats: ["read"]
          export: ["read"]

    validation:
      strict: true
      custom_rules:
        email: "email"
        password: "min_length:8"

    caching:
      ttl: "5m"
      key_pattern: "{table}:{operation}:{params}"
      strategy: "redis"
      invalidate_on: ["create", "update", "delete"]
      skip_cache: ["search", "stats"]

    pagination:
      default_limit: 20
      max_limit: 100
      page_param: "page"
      limit_param: "limit"
      sort_param: "sort"
      order_param: "order"
      enable_cursor: false

    filtering:
      allowed_fields: ["name", "email", "status", "created_at", "updated_at"]
      operators:
        eq: "="
        ne: "!="
        gt: ">"
        gte: ">="
        lt: "<"
        lte: "<="
        like: "LIKE"
        ilike: "ILIKE"
        in: "IN"
        nin: "NOT IN"
        null: "IS NULL"
        nnull: "IS NOT NULL"
      date_ranges: ["created_at", "updated_at"]
      text_search: ["name", "email", "description"]

    sorting:
      allowed_fields: ["name", "email", "created_at", "updated_at", "id"]
      default_sort: "created_at:desc"
      multi_sort: true
      case_sensitive: false

    documentation:
      enabled: true
      title: "Auto Generated API"
      version: "1.0.0"
      description: "Automatically generated API endpoints for all database tables"
      base_url: "http://localhost:8080/api/v1"
      contact:
        name: "API Support"
        email: "support@example.com"
        url: "https://example.com/support"

  # Table-specific configuration
  tables:
    users:
      enabled: true
      endpoints:
        - list
        - create
        - get
        - update
        - delete
        - bulk
        - search
        - stats
        - export
      relationships:
        - roles
        - profile
        - orders
      security:
        rbac:
          resource: "users"
          permissions:
            list: ["users:read"]
            create: ["users:write"]
            get: ["users:read"]
            update: ["users:write"]
            delete: ["users:delete"]
            bulk: ["users:write"]
            search: ["users:read"]
            stats: ["users:read"]
            export: ["users:read"]
        rate_limit:
          requests: 50
          window: "1m"
          burst: 5
        audit: true
      validation:
        strict: true
        required: ["name", "email"]
        custom_rules:
          email: "email"
          password: "min_length:8"
        min_length:
          name: 2
          password: 8
        max_length:
          name: 100
          email: 255
        email: ["email"]
      caching:
        ttl: "10m"
        key_pattern: "users:{id}"
        invalidate_on: ["create", "update", "delete"]
      filtering:
        allowed_fields: ["name", "email", "status", "created_at", "updated_at"]
        text_search: ["name", "email"]
      sorting:
        allowed_fields: ["name", "email", "created_at", "updated_at", "id"]
        default_sort: "created_at:desc"

    roles:
      enabled: true
      endpoints:
        - list
        - create
        - get
        - update
        - delete
        - bulk
      relationships:
        - permissions
        - users
      security:
        rbac:
          resource: "roles"
          permissions:
            list: ["roles:read"]
            create: ["roles:write"]
            get: ["roles:read"]
            update: ["roles:write"]
            delete: ["roles:delete"]
            bulk: ["roles:write"]
        rate_limit:
          requests: 30
          window: "1m"
          burst: 3
        audit: true
      validation:
        strict: true
        required: ["name"]
        min_length:
          name: 2
        max_length:
          name: 50
      filtering:
        allowed_fields: ["name", "created_at", "updated_at"]
        text_search: ["name", "description"]
      sorting:
        allowed_fields: ["name", "created_at", "updated_at", "id"]
        default_sort: "name:asc"

    permissions:
      enabled: true
      endpoints:
        - list
        - create
        - get
        - update
        - delete
      relationships:
        - roles
      security:
        rbac:
          resource: "permissions"
          permissions:
            list: ["permissions:read"]
            create: ["permissions:write"]
            get: ["permissions:read"]
            update: ["permissions:write"]
            delete: ["permissions:delete"]
        rate_limit:
          requests: 30
          window: "1m"
          burst: 3
        audit: true
      validation:
        strict: true
        required: ["name", "resource"]
        min_length:
          name: 2
          resource: 2
        max_length:
          name: 100
          resource: 100
      filtering:
        allowed_fields: ["name", "resource", "created_at", "updated_at"]
        text_search: ["name", "resource", "description"]
      sorting:
        allowed_fields: ["name", "resource", "created_at", "updated_at", "id"]
        default_sort: "resource:asc,name:asc"

    files:
      enabled: true
      endpoints:
        - list
        - create
        - get
        - update
        - delete
        - bulk
        - search
        - stats
        - export
      relationships:
        - user
      security:
        rbac:
          resource: "files"
          permissions:
            list: ["files:read"]
            create: ["files:write"]
            get: ["files:read"]
            update: ["files:write"]
            delete: ["files:delete"]
            bulk: ["files:write"]
            search: ["files:read"]
            stats: ["files:read"]
            export: ["files:read"]
        rate_limit:
          requests: 20
          window: "1m"
          burst: 2
        audit: true
      validation:
        strict: true
        required: ["filename", "path", "size"]
        min_length:
          filename: 1
        max_length:
          filename: 255
          path: 500
        min_value:
          size: 0
      filtering:
        allowed_fields:
          ["filename", "mime_type", "size", "created_at", "updated_at"]
        text_search: ["filename", "original_name"]
      sorting:
        allowed_fields: ["filename", "size", "created_at", "updated_at", "id"]
        default_sort: "created_at:desc"

    audit_logs:
      enabled: false # Disable auto-generation for audit logs
      endpoints: []
      security:
        rbac:
          resource: "audit_logs"
          permissions:
            list: ["audit_logs:read"]
            get: ["audit_logs:read"]
        rate_limit:
          requests: 10
          window: "1m"
          burst: 1
        audit: false # Don't audit audit logs
      filtering:
        allowed_fields: ["action", "resource", "ip_address", "created_at"]
        text_search: ["action", "resource", "ip_address"]
      sorting:
        allowed_fields: ["created_at", "action", "resource", "id"]
        default_sort: "created_at:desc"
